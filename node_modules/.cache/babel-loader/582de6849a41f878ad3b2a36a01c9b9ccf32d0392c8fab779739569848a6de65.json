{"ast":null,"code":"var _jsxFileName = \"/Users/shivaniuppe/Desktop/port/src/components/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '/Users/shivaniuppe/Desktop/port/src/Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  // State to track the selected category\n  const [selectedCategory, setSelectedCategory] = useState(\"ALL\");\n\n  // Project data\n  const projects = [{\n    category: \"GRADUATE\",\n    name: \"DalExchange\",\n    description: \"DalExchange is a web-based thrift store platform specifically designed for Dalhousie University students.\",\n    features: [\"Secure Login - Only for Dal students.\", \"Listings - Browse second-hand items.\", \"Wishlist - Save favorite items.\", \"Trade Request - Send buy requests.\", \"Notifications - Get trade updates.\", \"Payments - Pay securely with Stripe.\", \"Reviews - Rate and review purchases.\", \"List Item - Easily sell items.\", \"Profile - View history and wishlists.\", \"Admin Dashboard - Track site stats.\", \"Order Control - Edit or refund orders.\", \"User Control - Manage user accounts.\", \"Product Check - Approve or unlist items.\", \"Feedback Control - Remove offensive comments.\"],\n    githubUrl: \"Github URL\"\n  }, {\n    category: \"GRADUATE\",\n    name: \"TinyDB\",\n    description: \"TinyDb is a file-based database management system (DBMS) designed to simulate essential features of traditional DBMS like MySQL.\",\n    features: [\"User Authentication: Create accounts, log in, and authenticate via security questions.\", \"Database Management: Create, delete, and switch databases.\", \"Table Management: Create tables, insert/update/delete records.\", \"Query Processing: Execute commands for managing databases and tables.\", \"ERD Generation: Visualize database structure as Entity-Relationship Diagrams.\", \"SQL Export: Export data and structure as SQL dump files.\", \"Transactions & Logging: Support for commit/rollback transactions and query logging for auditing.\"],\n    githubUrl: \"Github URL\"\n  }, {\n    category: \"GRADUATE\",\n    name: \"FitnessTracker\",\n    description: \"This serverless fitness tracking application, built using AWS Cloud services and Infrastructure-as-Code (IaC) with AWS CloudFormation.\",\n    features: [\"User Registration: Users register with an email, stored in DynamoDB.\", \"Fitness Data Submission: Users submit fitness data (e.g., steps taken), stored in DynamoDB.\", \"Goal Tracking & Notifications: The app tracks goals, sending SNS notifications when goals are met.\", \"API Integration: AWS API Gateway manages API endpoints, invoking Lambda functions for data operations.\", \"Event-Driven Notifications: AWS Step Functions orchestrates events when fitness goals are achieved.\"],\n    githubUrl: \"Github URL\"\n  }, {\n    category: \"PERSONAL\",\n    name: \"Etch-a-Sketch\",\n    description: \"A web-based Etch-a-Sketch application built using JavaScript, HTML, and CSS, allowing users to draw interactively on a customizable grid.\",\n    features: [\"Interactive Drawing: JavaScript event handling enables smooth, responsive drawing.\", \"Responsive Design: CSS styling ensures a user-friendly interface adaptable to different screen sizes.\", \"Customizable Options: Users can change colors and adjust grid size to personalize their drawing experience.\", \"Performance Optimization: Ensured smooth performance across major browsers for an enhanced user experience.\"],\n    githubUrl: \"Github URL\"\n  }];\n\n  // Function to handle category selection\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n\n  // Filter projects based on selected category\n  const filteredProjects = selectedCategory === \"ALL\" ? projects : projects.filter(project => project.category === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"projects-title\",\n      children: \"PROJECTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-categories\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-button ${selectedCategory === \"ALL\" ? \"active\" : \"\"}`,\n        onClick: () => handleCategoryChange(\"ALL\"),\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-button ${selectedCategory === \"GRADUATE\" ? \"active\" : \"\"}`,\n        onClick: () => handleCategoryChange(\"GRADUATE\"),\n        children: \"GRADUATE PROJECTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-button ${selectedCategory === \"PERSONAL\" ? \"active\" : \"\"}`,\n        onClick: () => handleCategoryChange(\"PERSONAL\"),\n        children: \"PERSONAL PROJECTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"project-name\",\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: project.features.map((feature, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: feature\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"github-button\",\n        children: project.githubUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(Projects, \"5yiXWck16DyQZIzy0HvPO+wSozE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Projects","_s","selectedCategory","setSelectedCategory","projects","category","name","description","features","githubUrl","handleCategoryChange","filteredProjects","filter","project","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","feature","i","_c","$RefreshReg$"],"sources":["/Users/shivaniuppe/Desktop/port/src/components/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '/Users/shivaniuppe/Desktop/port/src/Projects.css';\n\nfunction Projects() {\n    // State to track the selected category\n    const [selectedCategory, setSelectedCategory] = useState(\"ALL\");\n\n    // Project data\n    const projects = [\n        {\n            category: \"GRADUATE\",\n            name: \"DalExchange\",\n            description: \"DalExchange is a web-based thrift store platform specifically designed for Dalhousie University students.\",\n            features: [\n                \"Secure Login - Only for Dal students.\",\n                \"Listings - Browse second-hand items.\",\n                \"Wishlist - Save favorite items.\",\n                \"Trade Request - Send buy requests.\",\n                \"Notifications - Get trade updates.\",\n                \"Payments - Pay securely with Stripe.\",\n                \"Reviews - Rate and review purchases.\",\n                \"List Item - Easily sell items.\",\n                \"Profile - View history and wishlists.\",\n                \"Admin Dashboard - Track site stats.\",\n                \"Order Control - Edit or refund orders.\",\n                \"User Control - Manage user accounts.\",\n                \"Product Check - Approve or unlist items.\",\n                \"Feedback Control - Remove offensive comments.\"\n            ],\n            githubUrl: \"Github URL\"\n        },\n        {\n            category: \"GRADUATE\",\n            name: \"TinyDB\",\n            description: \"TinyDb is a file-based database management system (DBMS) designed to simulate essential features of traditional DBMS like MySQL.\",\n            features: [\n                \"User Authentication: Create accounts, log in, and authenticate via security questions.\",\n                \"Database Management: Create, delete, and switch databases.\",\n                \"Table Management: Create tables, insert/update/delete records.\",\n                \"Query Processing: Execute commands for managing databases and tables.\",\n                \"ERD Generation: Visualize database structure as Entity-Relationship Diagrams.\",\n                \"SQL Export: Export data and structure as SQL dump files.\",\n                \"Transactions & Logging: Support for commit/rollback transactions and query logging for auditing.\"\n            ],\n            githubUrl: \"Github URL\"\n        },\n        {\n            category: \"GRADUATE\",\n            name: \"FitnessTracker\",\n            description: \"This serverless fitness tracking application, built using AWS Cloud services and Infrastructure-as-Code (IaC) with AWS CloudFormation.\",\n            features: [\n                \"User Registration: Users register with an email, stored in DynamoDB.\",\n                \"Fitness Data Submission: Users submit fitness data (e.g., steps taken), stored in DynamoDB.\",\n                \"Goal Tracking & Notifications: The app tracks goals, sending SNS notifications when goals are met.\",\n                \"API Integration: AWS API Gateway manages API endpoints, invoking Lambda functions for data operations.\",\n                \"Event-Driven Notifications: AWS Step Functions orchestrates events when fitness goals are achieved.\"\n            ],\n            githubUrl: \"Github URL\"\n        },\n        {\n            category: \"PERSONAL\",\n            name: \"Etch-a-Sketch\",\n            description: \"A web-based Etch-a-Sketch application built using JavaScript, HTML, and CSS, allowing users to draw interactively on a customizable grid.\",\n            features: [\n                \"Interactive Drawing: JavaScript event handling enables smooth, responsive drawing.\",\n                \"Responsive Design: CSS styling ensures a user-friendly interface adaptable to different screen sizes.\",\n                \"Customizable Options: Users can change colors and adjust grid size to personalize their drawing experience.\",\n                \"Performance Optimization: Ensured smooth performance across major browsers for an enhanced user experience.\"\n            ],\n            githubUrl: \"Github URL\"\n        }\n    ];\n\n    // Function to handle category selection\n    const handleCategoryChange = (category) => {\n        setSelectedCategory(category);\n    };\n\n    // Filter projects based on selected category\n    const filteredProjects = selectedCategory === \"ALL\"\n        ? projects\n        : projects.filter(project => project.category === selectedCategory);\n\n    return (\n        <div className=\"projects\">\n            <h1 className=\"projects-title\">PROJECTS</h1>\n            <div className=\"project-categories\">\n                <button\n                    className={`category-button ${selectedCategory === \"ALL\" ? \"active\" : \"\"}`}\n                    onClick={() => handleCategoryChange(\"ALL\")}\n                >ALL</button>\n                <button\n                    className={`category-button ${selectedCategory === \"GRADUATE\" ? \"active\" : \"\"}`}\n                    onClick={() => handleCategoryChange(\"GRADUATE\")}\n                >GRADUATE PROJECTS</button>\n                <button\n                    className={`category-button ${selectedCategory === \"PERSONAL\" ? \"active\" : \"\"}`}\n                    onClick={() => handleCategoryChange(\"PERSONAL\")}\n                >PERSONAL PROJECTS</button>\n            </div>\n\n            {filteredProjects.map((project, index) => (\n                <div key={index} className=\"project-card\">\n                    <h2 className=\"project-name\">{project.name}</h2>\n                    <p>{project.description}</p>\n                    <h3>Features</h3>\n                    <ul>\n                        {project.features.map((feature, i) => (\n                            <li key={i}>{feature}</li>\n                        ))}\n                    </ul>\n                    <button className=\"github-button\">{project.githubUrl}</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAMO,QAAQ,GAAG,CACb;IACIC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,aAAa;IACnBC,WAAW,EAAE,2GAA2G;IACxHC,QAAQ,EAAE,CACN,uCAAuC,EACvC,sCAAsC,EACtC,iCAAiC,EACjC,oCAAoC,EACpC,oCAAoC,EACpC,sCAAsC,EACtC,sCAAsC,EACtC,gCAAgC,EAChC,uCAAuC,EACvC,qCAAqC,EACrC,wCAAwC,EACxC,sCAAsC,EACtC,0CAA0C,EAC1C,+CAA+C,CAClD;IACDC,SAAS,EAAE;EACf,CAAC,EACD;IACIJ,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,kIAAkI;IAC/IC,QAAQ,EAAE,CACN,wFAAwF,EACxF,4DAA4D,EAC5D,gEAAgE,EAChE,uEAAuE,EACvE,+EAA+E,EAC/E,0DAA0D,EAC1D,kGAAkG,CACrG;IACDC,SAAS,EAAE;EACf,CAAC,EACD;IACIJ,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,gBAAgB;IACtBC,WAAW,EAAE,wIAAwI;IACrJC,QAAQ,EAAE,CACN,sEAAsE,EACtE,6FAA6F,EAC7F,oGAAoG,EACpG,wGAAwG,EACxG,qGAAqG,CACxG;IACDC,SAAS,EAAE;EACf,CAAC,EACD;IACIJ,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,2IAA2I;IACxJC,QAAQ,EAAE,CACN,oFAAoF,EACpF,uGAAuG,EACvG,6GAA6G,EAC7G,6GAA6G,CAChH;IACDC,SAAS,EAAE;EACf,CAAC,CACJ;;EAED;EACA,MAAMC,oBAAoB,GAAIL,QAAQ,IAAK;IACvCF,mBAAmB,CAACE,QAAQ,CAAC;EACjC,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAGT,gBAAgB,KAAK,KAAK,GAC7CE,QAAQ,GACRA,QAAQ,CAACQ,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACR,QAAQ,KAAKH,gBAAgB,CAAC;EAEvE,oBACIH,OAAA;IAAKe,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBhB,OAAA;MAAIe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CpB,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BhB,OAAA;QACIe,SAAS,EAAE,mBAAmBZ,gBAAgB,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC3EkB,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAAC,KAAK,CAAE;QAAAK,QAAA,EAC9C;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACbpB,OAAA;QACIe,SAAS,EAAE,mBAAmBZ,gBAAgB,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAChFkB,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAAC,UAAU,CAAE;QAAAK,QAAA,EACnD;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3BpB,OAAA;QACIe,SAAS,EAAE,mBAAmBZ,gBAAgB,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAChFkB,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAAC,UAAU,CAAE;QAAAK,QAAA,EACnD;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EAELR,gBAAgB,CAACU,GAAG,CAAC,CAACR,OAAO,EAAES,KAAK,kBACjCvB,OAAA;MAAiBe,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACrChB,OAAA;QAAIe,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEF,OAAO,CAACP;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDpB,OAAA;QAAAgB,QAAA,EAAIF,OAAO,CAACN;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BpB,OAAA;QAAAgB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBpB,OAAA;QAAAgB,QAAA,EACKF,OAAO,CAACL,QAAQ,CAACa,GAAG,CAAC,CAACE,OAAO,EAAEC,CAAC,kBAC7BzB,OAAA;UAAAgB,QAAA,EAAaQ;QAAO,GAAXC,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLpB,OAAA;QAAQe,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEF,OAAO,CAACJ;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA,GATxDG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAClB,EAAA,CAjHQD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAmHjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}