{"ast":null,"code":"import React,{useState}from'react';import'/Users/shivaniuppe/Desktop/portfolio/src/Projects.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Projects(){// State to track the selected category\nconst[selectedCategory,setSelectedCategory]=useState(\"ALL\");// Project data\nconst projects=[{category:\"GRADUATE\",name:\"DalExchange\",description:\"DalExchange is a web-based thrift store platform specifically designed for Dalhousie University students.\",features:[\"Secure Login - Only for Dal students.\",\"Listings - Browse second-hand items.\",\"Wishlist - Save favorite items.\",\"Trade Request - Send buy requests.\",\"Notifications - Get trade updates.\",\"Payments - Pay securely with Stripe.\",\"Reviews - Rate and review purchases.\",\"List Item - Easily sell items.\",\"Profile - View history and wishlists.\",\"Admin Dashboard - Track site stats.\",\"Order Control - Edit or refund orders.\",\"User Control - Manage user accounts.\",\"Product Check - Approve or unlist items.\",\"Feedback Control - Remove offensive comments.\"],githubUrl:\"https://github.com/shivaniuppe/DalExchange\"},{category:\"GRADUATE\",name:\"TinyDB\",description:\"TinyDb is a file-based database management system (DBMS) designed to simulate essential features of traditional DBMS like MySQL.\",features:[\"User Authentication: Create accounts, log in, and authenticate via security questions.\",\"Database Management: Create, delete, and switch databases.\",\"Table Management: Create tables, insert/update/delete records.\",\"Query Processing: Execute commands for managing databases and tables.\",\"ERD Generation: Visualize database structure as Entity-Relationship Diagrams.\",\"SQL Export: Export data and structure as SQL dump files.\",\"Transactions & Logging: Support for commit/rollback transactions and query logging for auditing.\"],githubUrl:\"https://github.com/shivaniuppe/TinyDB\"},{category:\"GRADUATE\",name:\"FitnessTracker\",description:\"This serverless fitness tracking application, built using AWS Cloud services and Infrastructure-as-Code (IaC) with AWS CloudFormation.\",features:[\"User Registration: Users register with an email, stored in DynamoDB.\",\"Fitness Data Submission: Users submit fitness data (e.g., steps taken), stored in DynamoDB.\",\"Goal Tracking & Notifications: The app tracks goals, sending SNS notifications when goals are met.\",\"API Integration: AWS API Gateway manages API endpoints, invoking Lambda functions for data operations.\",\"Event-Driven Notifications: AWS Step Functions orchestrates events when fitness goals are achieved.\"],githubUrl:\"https://github.com/shivaniuppe/FitnessTracker_IaC\"},{category:\"PERSONAL\",name:\"Etch-a-Sketch\",description:\"A web-based Etch-a-Sketch application built using JavaScript, HTML, and CSS, allowing users to draw interactively on a customizable grid.\",features:[\"Interactive Drawing: JavaScript event handling enables smooth, responsive drawing.\",\"Responsive Design: CSS styling ensures a user-friendly interface adaptable to different screen sizes.\",\"Customizable Options: Users can change colors and adjust grid size to personalize their drawing experience.\",\"Performance Optimization: Ensured smooth performance across major browsers for an enhanced user experience.\"],githubUrl:\"https://github.com/shivaniuppe/etch-a-sketch\"}];// Function to handle category selection\nconst handleCategoryChange=category=>{setSelectedCategory(category);};// Filter projects based on selected category\nconst filteredProjects=selectedCategory===\"ALL\"?projects:projects.filter(project=>project.category===selectedCategory);return/*#__PURE__*/_jsxs(\"div\",{className:\"projects\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"projects-title\",children:\"PROJECTS\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"project-categories\",children:[/*#__PURE__*/_jsx(\"button\",{className:`category-button ${selectedCategory===\"ALL\"?\"active\":\"\"}`,onClick:()=>handleCategoryChange(\"ALL\"),children:\"ALL\"}),/*#__PURE__*/_jsx(\"button\",{className:`category-button ${selectedCategory===\"GRADUATE\"?\"active\":\"\"}`,onClick:()=>handleCategoryChange(\"GRADUATE\"),children:\"GRADUATE PROJECTS\"}),/*#__PURE__*/_jsx(\"button\",{className:`category-button ${selectedCategory===\"PERSONAL\"?\"active\":\"\"}`,onClick:()=>handleCategoryChange(\"PERSONAL\"),children:\"PERSONAL PROJECTS\"})]}),filteredProjects.map((project,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"project-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"project-name\",children:project.name}),/*#__PURE__*/_jsx(\"p\",{children:project.description}),/*#__PURE__*/_jsx(\"h3\",{children:\"Features\"}),/*#__PURE__*/_jsx(\"ul\",{children:project.features.map((feature,i)=>/*#__PURE__*/_jsx(\"li\",{children:feature},i))}),/*#__PURE__*/_jsx(\"a\",{href:project.githubUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"github-button\",children:\"GitHub URL\"})]},index))]});}export default Projects;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Projects","selectedCategory","setSelectedCategory","projects","category","name","description","features","githubUrl","handleCategoryChange","filteredProjects","filter","project","className","children","onClick","map","index","feature","i","href","target","rel"],"sources":["/Users/shivaniuppe/Desktop/portfolio/src/components/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '/Users/shivaniuppe/Desktop/portfolio/src/Projects.css';\n\nfunction Projects() {\n    // State to track the selected category\n    const [selectedCategory, setSelectedCategory] = useState(\"ALL\");\n\n    // Project data\n    const projects = [\n        {\n            category: \"GRADUATE\",\n            name: \"DalExchange\",\n            description: \"DalExchange is a web-based thrift store platform specifically designed for Dalhousie University students.\",\n            features: [\n                \"Secure Login - Only for Dal students.\",\n                \"Listings - Browse second-hand items.\",\n                \"Wishlist - Save favorite items.\",\n                \"Trade Request - Send buy requests.\",\n                \"Notifications - Get trade updates.\",\n                \"Payments - Pay securely with Stripe.\",\n                \"Reviews - Rate and review purchases.\",\n                \"List Item - Easily sell items.\",\n                \"Profile - View history and wishlists.\",\n                \"Admin Dashboard - Track site stats.\",\n                \"Order Control - Edit or refund orders.\",\n                \"User Control - Manage user accounts.\",\n                \"Product Check - Approve or unlist items.\",\n                \"Feedback Control - Remove offensive comments.\"\n            ],\n            githubUrl: \"https://github.com/shivaniuppe/DalExchange\"\n        },\n        {\n            category: \"GRADUATE\",\n            name: \"TinyDB\",\n            description: \"TinyDb is a file-based database management system (DBMS) designed to simulate essential features of traditional DBMS like MySQL.\",\n            features: [\n                \"User Authentication: Create accounts, log in, and authenticate via security questions.\",\n                \"Database Management: Create, delete, and switch databases.\",\n                \"Table Management: Create tables, insert/update/delete records.\",\n                \"Query Processing: Execute commands for managing databases and tables.\",\n                \"ERD Generation: Visualize database structure as Entity-Relationship Diagrams.\",\n                \"SQL Export: Export data and structure as SQL dump files.\",\n                \"Transactions & Logging: Support for commit/rollback transactions and query logging for auditing.\"\n            ],\n            githubUrl: \"https://github.com/shivaniuppe/TinyDB\"\n        },\n        {\n            category: \"GRADUATE\",\n            name: \"FitnessTracker\",\n            description: \"This serverless fitness tracking application, built using AWS Cloud services and Infrastructure-as-Code (IaC) with AWS CloudFormation.\",\n            features: [\n                \"User Registration: Users register with an email, stored in DynamoDB.\",\n                \"Fitness Data Submission: Users submit fitness data (e.g., steps taken), stored in DynamoDB.\",\n                \"Goal Tracking & Notifications: The app tracks goals, sending SNS notifications when goals are met.\",\n                \"API Integration: AWS API Gateway manages API endpoints, invoking Lambda functions for data operations.\",\n                \"Event-Driven Notifications: AWS Step Functions orchestrates events when fitness goals are achieved.\"\n            ],\n            githubUrl: \"https://github.com/shivaniuppe/FitnessTracker_IaC\"\n        },\n        {\n            category: \"PERSONAL\",\n            name: \"Etch-a-Sketch\",\n            description: \"A web-based Etch-a-Sketch application built using JavaScript, HTML, and CSS, allowing users to draw interactively on a customizable grid.\",\n            features: [\n                \"Interactive Drawing: JavaScript event handling enables smooth, responsive drawing.\",\n                \"Responsive Design: CSS styling ensures a user-friendly interface adaptable to different screen sizes.\",\n                \"Customizable Options: Users can change colors and adjust grid size to personalize their drawing experience.\",\n                \"Performance Optimization: Ensured smooth performance across major browsers for an enhanced user experience.\"\n            ],\n            githubUrl: \"https://github.com/shivaniuppe/etch-a-sketch\"\n        }\n    ];\n\n    // Function to handle category selection\n    const handleCategoryChange = (category) => {\n        setSelectedCategory(category);\n    };\n\n    // Filter projects based on selected category\n    const filteredProjects = selectedCategory === \"ALL\"\n        ? projects\n        : projects.filter(project => project.category === selectedCategory);\n\n    return (\n        <div className=\"projects\">\n            <h1 className=\"projects-title\">PROJECTS</h1>\n            <div className=\"project-categories\">\n                <button\n                    className={`category-button ${selectedCategory === \"ALL\" ? \"active\" : \"\"}`}\n                    onClick={() => handleCategoryChange(\"ALL\")}\n                >ALL</button>\n                <button\n                    className={`category-button ${selectedCategory === \"GRADUATE\" ? \"active\" : \"\"}`}\n                    onClick={() => handleCategoryChange(\"GRADUATE\")}\n                >GRADUATE PROJECTS</button>\n                <button\n                    className={`category-button ${selectedCategory === \"PERSONAL\" ? \"active\" : \"\"}`}\n                    onClick={() => handleCategoryChange(\"PERSONAL\")}\n                >PERSONAL PROJECTS</button>\n            </div>\n\n            {filteredProjects.map((project, index) => (\n                <div key={index} className=\"project-card\">\n                    <h2 className=\"project-name\">{project.name}</h2>\n                    <p>{project.description}</p>\n                    <h3>Features</h3>\n                    <ul>\n                        {project.features.map((feature, i) => (\n                            <li key={i}>{feature}</li>\n                        ))}\n                    </ul>\n                    <a href={project.githubUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-button\">\n                        GitHub URL\n                    </a>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}